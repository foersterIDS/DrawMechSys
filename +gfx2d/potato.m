function obj = potato(x,y,maxradius,orientation,varargin)
    R = [0.682683284573433;-0.0238969836768423;0.00376198026933914;...
         0.230220447195159;-0.0112419144489897;0.0185684008875135;...
         0.00490093124038943;0.0563902143722272;...
         -0.00638284297472143;0.00624041952760134;...
         0.00987992733106924;0.0139147643455394;...
         -0.00334033523673144;0.00339833990858457;...
         0.00692577680016949;0.00333353502958807;...
         -0.000991768915681617;-0.00157023165483012;...
         0.00501545179227631;0.00250344690898478;...
         0.000993703810072736;-0.000806364340614736;...
         0.00421957778338444;-0.00116436357910808;...
         0.00182532522442883;-9.00727095079374e-05;...
         0.00241559094694048;0.000304431570543978;...
         0.00205725278164316;-0.000662018746103627;...
         0.00138191308162547;-0.000434817560887372;...
         0.00185455004922569;-9.44790263731681e-05;...
         0.000875704686340864;-0.000922671579723291;...
         0.000940092677133933;0.000133072101259106;...
         0.000275254136157046;-0.000852725439023801;...
         0.000658657510674530];
     %% Init:
     Nh = 20;
     Nu = 100;
     %% Calc:
     % Referenz-Koerper:
     phi = linspace(0,2*pi,Nu);
     r = R(1);
     for i=1:Nh
         r = r+R(2*i)*cos(i*phi);
         r = r+R(2*i+1)*sin(i*phi);
     end
     Xshape = maxradius./r.*cos(phi);
     Yshape = maxradius./r.*sin(phi);
     
     
     obj = gfx2d.body(x,y,Xshape,Yshape,orientation,varargin{:});
end





